System`HoldComplete[Global`RedefinePublicFunction[Global`SceneXEnergySelectNew[System`Pattern[Global`dimension, System`Alternatives[2, 3]], System`Pattern[Global`lightIntensityParameterCount, System`Blank[System`Integer]], System`Pattern[Global`colorDim, System`Blank[System`Integer]]], "constructs the SOP selection function, which maps variables as used in the SceneXEnergyf[] expression to variable names as given in SceneXDEnergyDataAsFM", System`Module[System`List[Global`select, Global`position], System`CompoundExpression[System`Set[Global`position, System`Part[System`List[Global`x, Global`y, Global`z], System`Span[1, Global`dimension]]], System`With[System`List[System`Set[Global`selection, System`Join[System`List[], System`Map[Global`IdentityRule, System`Array[Global`l, Global`lightIntensityParameterCount]], System`Map[Global`IdentityRule, Global`SceneXEnergyWeightNames[]], System`Map[System`Function[System`Rule[Global`a[System`Slot[1]], System`List[System`Apply[System`Sequence, System`Plus[Global`position, System`Slot[1]]], 1]]], Global`FlatCoordinateBoundsArray[System`Table[System`List[-1, 1], Global`dimension]]], System`Map[System`Function[System`Rule[Global`d[System`Slot[1]], System`List[System`Apply[System`Sequence, System`Plus[Global`position, System`Slot[1]]], 2]]], Global`FlatCoordinateBoundsArray[System`Table[System`List[-1, 1], Global`dimension]]], System`Map[System`Function[System`Rule[Global`doriginal[System`Slot[1]], System`List[System`Apply[System`Sequence, System`Plus[Global`position, System`Slot[1]]], 3]]], Global`FlatCoordinateBoundsArray[System`Table[System`List[-1, 1], Global`dimension]]], System`Flatten[System`Table[System`Map[System`Function[System`Rule[Global`c[System`Slot[1], Global`cc], System`List[System`Apply[System`Sequence, System`Plus[Global`position, System`Slot[1]]], System`Plus[3, Global`cc]]]], Global`FlatCoordinateBoundsArray[System`Table[System`List[-1, 1], Global`dimension]]], System`List[Global`cc, Global`colorDim]]]]]], System`ReleaseHold[System`ReplaceAll[System`Hold[System`CompoundExpression[System`SetDelayed[Global`select[Global`in$], Global`out$], System`Null]], System`List[System`Rule[Global`in$, System`Map[System`Function[System`Pattern[System`Slot[1], System`Blank[]]], Global`position]], System`Rule[Global`out$, Global`selection]]]]], Global`select]], System`Blank[], ""]]
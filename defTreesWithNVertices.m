System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], Global`TreesWithNVertices[1, System`Optional[System`Pattern[Global`baseVertex, System`PatternTest[System`Blank[System`Integer], System`Positive]], 1], System`OptionsPattern[]], "Generates all trees with n vertices. There are CatalanNumber[n-1] many of these. Returns {__Graph} of length CatalanNumber[n-1]. VertexList of each graph will show the root first which always has number 1. The graph vertices are numbered as if the tree where traversed in pre-order. The Graphs have only UndirectedEdges unless Method is DirectedEdge.", System`CompoundExpression[Global`EchoOff[System`List[1, Global`baseVertex], "TreesWithNVertices"], System`List[Global`GraphLayoutTreeWithRoot[System`Graph[System`List[Global`baseVertex], System`List[]], Global`baseVertex]]], System`Pattern[Global`list, System`List[System`BlankSequence[System`Graph]]], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[System`Rule[System`Options, System`List[System`Rule[System`Method, System`UndirectedEdge]]]], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Pattern[Global`list, System`List[System`BlankSequence[System`Graph]]], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "Generates all trees with n vertices. There are CatalanNumber[n-1] many of these. Returns {__Graph} of length CatalanNumber[n-1]. VertexList of each graph will show the root first which always has number 1. The graph vertices are numbered as if the tree where traversed in pre-order. The Graphs have only UndirectedEdges unless Method is DirectedEdge.", Global`body$, System`Pattern[Global`list, System`List[System`BlankSequence[System`Graph]]], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[Global`TreesWithNVertices[System`PatternTest[System`Pattern[Global`n, System`Blank[System`Integer]], System`Positive], System`Optional[System`Pattern[Global`baseVertex, System`PatternTest[System`Blank[System`Integer], System`Positive]], 1], System`OptionsPattern[]], System`CompoundExpression[Global`EchoOff[System`List[Global`n, Global`baseVertex], "TreesWithNVertices"], System`With[System`List[System`Set[Global`compositions, Global`EchoOff[Global`CompositionsNonzeroAll[System`Plus[Global`n, -1]]]], System`Set[Global`baseVertexGraph, System`Graph[System`List[Global`baseVertex], System`List[]]]], System`With[System`List[System`Set[Global`compositionTrees, Global`EchoOff[System`Map[System`Function[Global`TreesWithNVerticesMultipleDisjoint[System`Slot[1], System`Plus[Global`baseVertex, 1], System`Rule[System`Method, System`OptionValue[System`Method]]]], Global`compositions], "compositionTrees", System`InputForm]]], Global`EchoOff[System`Apply[System`Join, System`Map[System`Function[System`Map[System`Function[System`List[Global`childTreesList], Global`GraphLayoutTreeWithRoot[Global`GraphJoinConnectingFirstVertex[Global`baseVertexGraph, Global`EchoOff[Global`childTreesList, "childTreesList", System`InputForm], System`Rule[System`Method, System`OptionValue[System`Method]]], Global`baseVertex]], System`Tuples[System`Slot[1]]]], Global`compositionTrees]], "done", System`InputForm]]]]]]], System`List[1]], System`Null]], System`Null]]
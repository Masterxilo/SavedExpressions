System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], System`Condition[Global`Scene3DColorDimEnsure3[System`Pattern[Global`s, System`Blank[Global`Scene3D]]], System`SameQ[Global`s["colorDim"], 1]], "enforce scene to have 3 color channels", Global`Scene3DMakeFromRules[Global`s["l"], System`Apply[System`Function[System`List[Global`p, Global`data], System`Rule[Global`p, System`Append[System`Part[Global`data, System`List[1, 2, 3]], System`Table[System`Part[Global`data, 4, 1], 3]]]], Global`Scene3DGetRules[Global`s], System`List[1]]], System`Blank[Global`Scene3D], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Blank[Global`Scene3D], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "enforce scene to have 3 color channels", Global`body$, System`Blank[Global`Scene3D], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[System`Condition[Global`Scene3DColorDimEnsure3[System`Pattern[Global`s, System`Blank[Global`Scene3D]]], System`SameQ[Global`s["colorDim"], 3]], Global`s]]], System`List[1]], System`Null]], System`Null]]
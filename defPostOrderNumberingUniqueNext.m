System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], System`Condition[Global`PostOrderNumberingUniqueNext[System`Pattern[Global`sequence, System`List[System`PatternTest[System`BlankSequence[System`Integer], System`Positive]]], System`PatternTest[System`Pattern[Global`end, System`Blank[System`Integer]], System`Positive], System`PatternTest[System`Pattern[Global`max, System`Blank[System`Integer]], System`Positive]], System`Equal[Global`end, System`Length[Global`sequence]]], "utility for PostOrderNumberingUniqueAll\n\nIdea by Tobias.\n\nTakes a current sequence as generated by PostOrderNumberingUnique(All) which must be all ones after end and which consists only of numbers 1:max", System`List[Global`sequence], System`Blank[], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Blank[], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "utility for PostOrderNumberingUniqueAll\n\nIdea by Tobias.\n\nTakes a current sequence as generated by PostOrderNumberingUnique(All) which must be all ones after end and which consists only of numbers 1:max", Global`body$, System`Blank[], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[System`Condition[Global`PostOrderNumberingUniqueNext[System`Pattern[Global`sequence, System`List[System`PatternTest[System`BlankSequence[System`Integer], System`Positive]]], System`PatternTest[System`Pattern[Global`end, System`Blank[System`Integer]], System`Positive], System`PatternTest[System`Pattern[Global`max, System`Blank[System`Integer]], System`Positive]], System`Less[Global`end, System`Length[Global`sequence]]], System`Module[System`List[System`Set[Global`collection, System`List[Global`sequence]]], System`CompoundExpression[Global`ForEach[System`List[Global`newEnd, System`Plus[Global`end, 1], System`Length[Global`sequence]], Global`ForEach[System`List[Global`val, 2, System`Plus[Global`max, 1]], System`Module[System`List[System`Set[Global`msequence, Global`sequence]], System`CompoundExpression[System`Set[System`Part[Global`msequence, Global`newEnd], Global`val], Global`JoinTo[Global`collection, Global`PostOrderNumberingUniqueNext[Global`msequence, Global`newEnd, System`Max[Global`val, Global`max]]]]]]], Global`collection]]]]], System`List[1]], System`Null]], System`Null]]
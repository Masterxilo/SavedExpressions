System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], Global`FMConcat[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], System`Pattern[Global`g, System`Blank[Global`FiniteMapping]], System`OptionsPattern[]], "FMConcat[{f,g,...}] Produces a FiniteMapping with the values of f followed by those of g etc.\nAssumes f and g have disjoint domain elements.\nUse e.g. FMMapDomain to enforce this.\n\nOptions:\n* Method:\n\tEvaluate - build the concatenated list right now (uses more storage)\n\tConcat   - build a Concat implicitly concatenated list (slower to evaluate)", Global`FMConcat[System`List[Global`f, Global`g], System`OptionValue[System`Method]], System`Blank[], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[System`Rule[System`Options, System`List[System`Rule[System`Method, Global`Concat]]]], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Blank[], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "FMConcat[{f,g,...}] Produces a FiniteMapping with the values of f followed by those of g etc.\nAssumes f and g have disjoint domain elements.\nUse e.g. FMMapDomain to enforce this.\n\nOptions:\n* Method:\n\tEvaluate - build the concatenated list right now (uses more storage)\n\tConcat   - build a Concat implicitly concatenated list (slower to evaluate)", Global`body$, System`Blank[], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[Global`FMConcat[System`Pattern[Global`l, System`List[System`BlankSequence[Global`FiniteMapping]]], System`OptionsPattern[]], Global`FMConcat[Global`l, System`OptionValue[System`Method]]], System`List[Global`FMConcat[System`Pattern[Global`l, System`List[System`BlankSequence[Global`FiniteMapping]]], System`Evaluate], Global`FiniteMappingMakeFromLists[System`Apply[System`Join, System`Map[Global`FMDomain, Global`l]], System`Apply[System`Join, System`Map[Global`FMEvaluateAll, Global`l]]]], System`List[Global`FMConcat[System`Pattern[Global`l, System`List[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]]]], Global`Concat], Global`f], System`List[Global`FMConcat[System`Pattern[Global`l, System`List[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], System`Pattern[Global`g, System`Blank[Global`FiniteMapping]]]], Global`Concat], Global`FiniteMapping[Global`Concat, Global`f, Global`g]], System`List[Global`FMConcat[System`Pattern[Global`l, System`List[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], System`Pattern[Global`rest, System`BlankSequence[Global`FiniteMapping]]]], Global`Concat], Global`FMConcat[System`List[Global`f, Global`FMConcat[System`List[Global`rest]]]]]]], System`List[1]], System`Null]], System`Null]]
System`Cell[System`BoxData[System`RowBox[System`List["PRedefinePublicFunction", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List[System`RowBox[System`List["SOPCompiledOptimizePreprocessed", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List[System`RowBox[System`List["engine", ":", System`RowBox[System`List["SOPCompiled", "[", System`RowBox[System`List["a", ":", "_Association"]], "]"]]]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["dataValues_", "?", "NumericVectorQ"]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["flattenedSparseDerivativeZtoYIndicesCIndex", ":", System`RowBox[System`List["{", "__Integer", "}"]]]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["xIndicesCIndex", ":", System`RowBox[System`List["{", "__Integer", "}"]]]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["yIndicesCIndex", ":", System`RowBox[System`List["{", "__Integer", "}"]]]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["options", ":", System`RowBox[System`List["OptionsPattern", "[", "]"]]]]]], "\[IndentingNewLine]", "]"]], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", "\"using the given engine, solves the given optimization problem, taking ps, select and ys implicitly only (they have already been converted to the *indices*-form which is sent over to the C code), and data only by values\"", ",", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List[System`RowBox[System`List["for", " ", "now"]], ",", " ", System`RowBox[System`List["only", " ", "working", " ", "on", " ", "one", " ", "partition"]]]], "*)"]], "\[IndentingNewLine]", System`RowBox[System`List[System`RowBox[System`List["{", System`RowBox[System`List[System`RowBox[System`List["partitions", "=", "1"]], ",", System`RowBox[System`List["partition", "=", "0"]]]], "}"]], "~", "With", "~", System`RowBox[System`List["Module", "[", System`RowBox[System`List[System`RowBox[System`List["{", System`RowBox[System`List["val", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List["for", " ", "debugging"]], "*)"]], "\[IndentingNewLine]", System`RowBox[System`List["lengthz", "=", System`RowBox[System`List["a", "@", "\"lengthz\""]]]], ",", "\[IndentingNewLine]", System`RowBox[System`List["lengthfz", "=", System`RowBox[System`List["a", "@", "\"lengthfz\""]]]]]], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List["Note", " ", "this", " ", "does", " ", "ClearAll", " ", "on", " ", "SOPCompiled`Private`"]], "*)"]], "\[IndentingNewLine]", System`RowBox[System`List[System`RowBox[System`List["SOPCompiledEnsureInstalled", "@", "engine"]], ";", "\[IndentingNewLine]", System`RowBox[System`List["Assert", "[", System`RowBox[System`List[System`RowBox[System`List["lengthz", "//", "IntegerQ"]], ",", "\"non-integral lengthz\""]], "]"]], ";", "\[IndentingNewLine]", System`RowBox[System`List["Assert", "[", System`RowBox[System`List[System`RowBox[System`List[System`RowBox[System`List["SOPCompiled`Private`lengthzGet", "[", "]"]], "===", "lengthz"]], ",", "\"illegal lengthz\""]], "]"]], ";", "\[IndentingNewLine]", System`RowBox[System`List["Assert", "[", System`RowBox[System`List[System`RowBox[System`List[System`RowBox[System`List["SOPCompiled`Private`lengthfzGet", "[", "]"]], "===", "lengthfz"]], ",", "\"illegal lengthfz\""]], "]"]], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List["actual", " ", "work"]], "*)"]], "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List["send", " ", "data"]], "*)"]], "\[IndentingNewLine]", System`RowBox[System`List["SOPCompiled`Private`receiveSharedOptimizationData", "[", "dataValues", "]"]], ";", "\[IndentingNewLine]", System`RowBox[System`List["Assert", "[", System`RowBox[System`List[System`RowBox[System`List[System`RowBox[System`List["SOPCompiled`Private`xGet", "[", "]"]], "~", System`RowBox[System`List["ApproximatelyEqual", "[", System`RowBox[System`List["10", "^", System`RowBox[System`List["-", "4"]]]], System`RowBox[System`List["(*", System`RowBox[System`List[System`RowBox[System`List["must", " ", "tolerate", " ", "quite", " ", "some", " ", "difference"]], ",", " ", System`RowBox[System`List[System`RowBox[System`List[System`RowBox[System`List["esp", ".", " ", "with"]], " ", "large", " ", "datasets"]], " ", "-", " ", System`RowBox[System`List["could", " ", "also", " ", "check", " ", "individual", " ", "elements", " ", "instead", " ", "of", " ", System`RowBox[System`List["norm", "?"]]]]]]]], "*)"]], "]"]], "~", "dataValues"]], ",", "\"data not correctly received, norm difference: \"", ",", " ", System`RowBox[System`List["Norm", "[", System`RowBox[System`List[System`RowBox[System`List["SOPCompiled`Private`xGet", "[", "]"]], "-", "dataValues"]], "]"]]]], "]"]], ";", System`RowBox[System`List["(*", System`RowBox[System`List["conversion", " ", "from", " ", "double", " ", "to", " ", "float", " ", "loses", " ", "some", " ", "bits"]], "*)"]], "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List["pose", " ", "optimization", " ", "problems"]], "*)"]], "\[IndentingNewLine]", System`RowBox[System`List["SOPCompiled`Private`setPartitions", "[", "1", "]"]], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["SOPCompiled`Private`receiveOptimizationData", "[", "\[IndentingNewLine]", System`RowBox[System`List["partition", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "flattenedSparseDerivativeZtoYIndicesCIndex", ",", "\[IndentingNewLine]", "xIndicesCIndex", ",", "\[IndentingNewLine]", "yIndicesCIndex"]], "\[IndentingNewLine]", "]"]], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List["execute", " ", "them"]], "*)"]], "\[IndentingNewLine]", System`RowBox[System`List["If", "[", System`RowBox[System`List[System`RowBox[System`List[System`RowBox[System`List["OptionValue", "@", "Method"]], "===", "\"CUDA\""]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List[System`RowBox[System`List["SOPCompiled`Private`buildFxAndJFxAndSolveRepeatedlyCUDA", "[", System`RowBox[System`List["1", ",", "1", ",", "\[IndentingNewLine]", "partition", ",", "\[IndentingNewLine]", System`RowBox[System`List["OptionValue", "@", "MaxIterations"]]]], "\[IndentingNewLine]", "]"]], ";"]], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", System`RowBox[System`List["(*", "else", "*)"]], System`RowBox[System`List[System`RowBox[System`List["Assert", "[", System`RowBox[System`List[System`RowBox[System`List["OptionValue", "@", "Method"]], "===", "\"CPU\""]], "]"]], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["SOPCompiled`Private`buildFxAndJFxAndSolveRepeatedly", "[", "\[IndentingNewLine]", System`RowBox[System`List["partition", ",", "\[IndentingNewLine]", System`RowBox[System`List["OptionValue", "@", "MaxIterations"]]]], "\[IndentingNewLine]", "]"]], ";"]]]], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"]], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List["(*", System`RowBox[System`List[System`RowBox[System`List["solve", "[", "]"]], ";", System`RowBox[System`List[System`RowBox[System`List["--", " ", "done"]], " ", "above"]]]], "*)"]], "\[IndentingNewLine]", System`RowBox[System`List["With", "[", System`RowBox[System`List[System`RowBox[System`List["{", System`RowBox[System`List["y1", "=", System`RowBox[System`List["SOPCompiled`Private`getY", "[", "\[IndentingNewLine]", System`RowBox[System`List["partition", ",", "\[IndentingNewLine]", System`RowBox[System`List["Length", "@", "yIndicesCIndex"]]]], "]"]]]], System`RowBox[System`List["(*", System`RowBox[System`List["need", " ", "to", " ", "pass", " ", "size", " ", "of", " ", "y", " ", "for", " ", "_Out", "_write", "_"]], "*)"]], "\[IndentingNewLine]", "}"]], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", System`RowBox[System`List[System`RowBox[System`List["Assert", "[", System`RowBox[System`List[System`RowBox[System`List[System`RowBox[System`List["Length", "@", "y1"]], "\[Equal]", System`RowBox[System`List["Length", "@", "yIndicesCIndex"]]]], ",", "\"illegal y returned\""]], "]"]], ";", "\[IndentingNewLine]", "y1"]]]], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"]]]]]], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"]]]], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", System`RowBox[System`List["y1_", "/;", System`RowBox[System`List[System`RowBox[System`List["NumericVectorQ", "@", "y1"]], "&&", System`RowBox[System`List[System`RowBox[System`List["Length", "@", "y1"]], ">", "0"]]]]]], "\[IndentingNewLine]", ",", System`RowBox[System`List["Options", "->", System`RowBox[System`List["{", System`RowBox[System`List[System`RowBox[System`List["MaxIterations", "\[Rule]", "1"]], ",", System`RowBox[System`List["Method", "\[Rule]", "\"CPU\""]]]], "}"]]]]]], "\[IndentingNewLine]", "]"]]], "Input", System`Rule[System`CellChangeTimes, System`List[System`List[3.681030499676237`*^9, 3.6810305956891823`*^9], System`List[3.6810313423106284`*^9, 3.6810313819131823`*^9], System`List[3.6810338632279153`*^9, 3.681033983951528`*^9], System`List[3.681034021365588`*^9, 3.6810340539141865`*^9], System`List[3.681035180559353`*^9, 3.681035213192176`*^9], System`List[3.6810352641996703`*^9, 3.6810352664966373`*^9], 3.681047643802143`*^9, System`List[3.681047685439969`*^9, 3.6810478594515915`*^9], 3.6810507663585424`*^9, System`List[3.6810515437324595`*^9, 3.681051555749798`*^9], System`List[3.681051713952569`*^9, 3.6810517914704313`*^9], System`List[3.6810518495086994`*^9, 3.6810518499503546`*^9], 3.6810659895520267`*^9, System`List[3.6810660586842937`*^9, 3.681066073221874`*^9], System`List[3.681066142822384`*^9, 3.6810662676503468`*^9], 3.681067707675727`*^9, System`List[3.681067751274124`*^9, 3.681067813226429`*^9], System`List[3.6810738830095377`*^9, 3.6810738972122765`*^9], System`List[3.6811341021060715`*^9, 3.6811341322893934`*^9], System`List[3.6811354876480103`*^9, 3.681135556586088`*^9], System`List[3.6811658742966385`*^9, 3.681165878740061`*^9], System`List[3.681167512410055`*^9, 3.68116751562899`*^9], System`List[3.6811976551349716`*^9, 3.681197869469036`*^9], 3.68119863740071`*^9, System`List[3.6811990752416306`*^9, 3.6811990910772123`*^9], System`List[3.6811995431286373`*^9, 3.681199655104`*^9], System`List[3.6811996931188326`*^9, 3.6811997128784046`*^9], 3.681721556272338`*^9, System`List[3.6817221973252974`*^9, 3.681722373226974`*^9], System`List[3.681722850986725`*^9, 3.6817228634467506`*^9], System`List[3.681722950697541`*^9, 3.68172295893357`*^9], 3.6817347813587666`*^9, System`List[3.681735053454147`*^9, 3.68173509433223`*^9], System`List[3.681735137373558`*^9, 3.681735142326892`*^9], System`List[3.681735183766262`*^9, 3.681735198351564`*^9], System`List[3.6817355043461075`*^9, 3.681735566944697`*^9], System`List[3.6817356001368675`*^9, 3.6817356319542756`*^9]]], System`Rule[System`CellTags, "depersistedCelld2da4047-5b47-411a-ad55-bffe315cbdf6"]]
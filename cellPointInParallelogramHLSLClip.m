System`Cell[System`BoxData[System`RowBox[System`List["PRedefinePublicFunction", "[", "\[IndentingNewLine]", System`RowBox[System`List[System`RowBox[System`List["PointInParallelogramHLSLClip", "[", System`RowBox[System`List[System`RowBox[System`List["p", ":", System`RowBox[System`List["{", System`RowBox[System`List["_", ",", "_"]], "}"]]]], ",", System`RowBox[System`List["a", ":", System`RowBox[System`List["{", System`RowBox[System`List["_", ",", "_"]], "}"]]]], ",", System`RowBox[System`List["b", ":", System`RowBox[System`List["{", System`RowBox[System`List["_", ",", "_"]], "}"]]]], ",", System`RowBox[System`List["c", ":", System`RowBox[System`List["{", System`RowBox[System`List["_", ",", "_"]], "}"]]]]]], "]"]], "\[IndentingNewLine]", ",", "\"Polygon@{a,a+b,a+b+c,a+c}. test returned {st, {1,1}-st} for s and t between 0 and 1\n\n\n * Given a point p and a parallelogram defined by point a and vectors b and c, determines in p is inside the parallelogram. \n * returns a 4-vector that can be used with the clip instruction.\n */\nfloat4 PointInParallelogram(float2 p, float2 a, float4 bc)\n{\n\\t// unoptomized form:\n\\t//float2 o = p - a;\n\\t//float2 b = bc.xy;\n\\t//float2 c = bc.zw;\n\\t//float d = cross(b, c);\n\\t//float s = -cross(o, b) / d;\n\\t//float t = cross(o, c) / d;\n\\t// test for s and t between 0 and 1\n\\t//return float4(s, 1 - s, t, 1 - t);\n\n\\tfloat2 o = p - a;\n\\t// precompute 1/d\n\\tfloat invD = 1/cross(bc.xy, bc.zw);\n\\t// Compute an optimized o x b and o x c, leveraging that b and c are in the same vector register already (and free swizzles):\n\\t//   (o.x * b .y  - o.y * b .x, o.x *  c.y - o.y *  c.x) ==\n\\t//   (o.x * bc.y  - o.y * bc.x, o.x * bc.w - o.y * bc.z) ==\n\\t//    o.x * bc.yw - o.y * bc.xz\n\\tfloat2 st = (o.x * bc.yw - o.y * bc.xz) * float2(-invD, invD);\n\\t// test for s and t between 0 and 1\n\\treturn float4(st, float2(1,1) - st);\n}\n\"", "\[IndentingNewLine]", ",", "\[IndentingNewLine]", System`RowBox[System`List["With", "[", System`RowBox[System`List[System`RowBox[System`List["{", System`RowBox[System`List[System`RowBox[System`List["o", "=", System`RowBox[System`List["p", "-", "a"]]]], ",", " ", System`RowBox[System`List["invD", "=", System`RowBox[System`List["1", "/", System`RowBox[System`List["Cross2D", "[", System`RowBox[System`List["b", ",", "c"]], "]"]]]]]]]], "}"]], "\[IndentingNewLine]", ",", System`RowBox[System`List["{", System`RowBox[System`List["st", "=", System`RowBox[System`List[System`RowBox[System`List["(", System`RowBox[System`List[System`RowBox[System`List[System`RowBox[System`List["First", "@", "o"]], "*", System`RowBox[System`List["{", System`RowBox[System`List[System`RowBox[System`List["Last", "@", "b"]], ",", System`RowBox[System`List["Last", "@", "c"]]]], "}"]]]], "-", System`RowBox[System`List[System`RowBox[System`List["Last", "@", "o"]], "*", System`RowBox[System`List["{", System`RowBox[System`List[System`RowBox[System`List["First", "@", "b"]], ",", System`RowBox[System`List["First", "@", "c"]]]], "}"]]]]]], ")"]], "*", System`RowBox[System`List["{", System`RowBox[System`List[System`RowBox[System`List["-", "invD"]], ",", "invD"]], "}"]]]]]], "}"]], "\[IndentingNewLine]", ",", System`RowBox[System`List["st", "~", "Join", "~", System`RowBox[System`List["(", System`RowBox[System`List[System`RowBox[System`List["{", System`RowBox[System`List["1", ",", "1"]], "}"]], "-", "st"]], ")"]]]]]], "\[IndentingNewLine]", "]"]]]], "\[IndentingNewLine]", "]"]]], "Input", System`Rule[System`CellChangeTimes, System`List[System`List[3.6863123286012783`*^9, 3.68631262060445`*^9], System`List[3.686312799473631`*^9, 3.686312811120783`*^9], System`List[3.686312965115329`*^9, 3.6863129783081837`*^9], System`List[3.6863132250510197`*^9, 3.686313225828288`*^9], System`List[3.6863132743807898`*^9, 3.6863132963958893`*^9]]]]
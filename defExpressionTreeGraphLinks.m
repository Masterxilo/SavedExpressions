System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], Global`ExpressionTreeGraphLinks[System`PatternTest[System`Pattern[Global`s, System`Blank[]], System`AtomQ], System`Optional[System`Pattern[Global`intermediateNodeCounter, System`PatternTest[System`Blank[System`Integer], System`Positive]], 1], System`OptionsPattern[]], "Utility for ExpressionTreeGraph. Returns {links, thisNodeCounter, nextNodeCounter, symbolLabels_Association}", System`List[System`List[], Global`intermediateNodeCounter, System`Plus[Global`intermediateNodeCounter, 1], System`List[System`Rule[Global`intermediateNodeCounter, Global`s]]], System`Condition[System`List[System`List[System`RepeatedNull[System`Alternatives[System`Blank[System`UndirectedEdge], System`Blank[System`DirectedEdge]]]], System`PatternTest[System`Pattern[Global`thisc, System`Blank[System`Integer]], System`Positive], System`PatternTest[System`Pattern[Global`nextc, System`Blank[System`Integer]], System`Positive], System`List[System`RepeatedNull[System`Rule[System`Blank[System`Integer], System`PatternTest[System`Blank[], System`AtomQ]]]]], System`Less[Global`thisc, Global`nextc]], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[System`Rule[System`Options, System`List[System`Rule[System`Method, System`UndirectedEdge]]]], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Condition[System`List[System`List[System`RepeatedNull[System`Alternatives[System`Blank[System`UndirectedEdge], System`Blank[System`DirectedEdge]]]], System`PatternTest[System`Pattern[Global`thisc, System`Blank[System`Integer]], System`Positive], System`PatternTest[System`Pattern[Global`nextc, System`Blank[System`Integer]], System`Positive], System`List[System`RepeatedNull[System`Rule[System`Blank[System`Integer], System`PatternTest[System`Blank[], System`AtomQ]]]]], System`Less[Global`thisc, Global`nextc]], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "Utility for ExpressionTreeGraph. Returns {links, thisNodeCounter, nextNodeCounter, symbolLabels_Association}", Global`body$, System`Condition[System`List[System`List[System`RepeatedNull[System`Alternatives[System`Blank[System`UndirectedEdge], System`Blank[System`DirectedEdge]]]], System`PatternTest[System`Pattern[Global`thisc, System`Blank[System`Integer]], System`Positive], System`PatternTest[System`Pattern[Global`nextc, System`Blank[System`Integer]], System`Positive], System`List[System`RepeatedNull[System`Rule[System`Blank[System`Integer], System`PatternTest[System`Blank[], System`AtomQ]]]]], System`Less[Global`thisc, Global`nextc]], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[Global`ExpressionTreeGraphLinks[System`Pattern[Global`h, System`Blank[]][System`Pattern[Global`args, System`BlankNullSequence[]]], System`Optional[System`Pattern[Global`intermediateNodeCounter, System`PatternTest[System`Blank[System`Integer], System`Positive]], 1], System`OptionsPattern[]], System`With[System`List[System`Set[Global`children, System`List[Global`h, Global`args]], System`Set[Global`this, Global`intermediateNodeCounter]], System`Module[System`List[System`Set[Global`links, System`List[]], Global`newLinks, Global`childNode, System`Set[Global`counter, System`Plus[Global`intermediateNodeCounter, 1]], System`Set[Global`symbolLabels, System`List[]], Global`newSymbolLabels], System`CompoundExpression[Global`ForEach[System`List[Global`child, Global`children], System`CompoundExpression[System`Set[System`List[Global`newLinks, Global`childNode, Global`counter, Global`newSymbolLabels], Global`ExpressionTreeGraphLinks[Global`child, Global`counter, System`Rule[System`Method, System`OptionValue[System`Method]]]], Global`JoinTo[Global`symbolLabels, Global`newSymbolLabels], Global`JoinTo[Global`links, Global`newLinks], System`AppendTo[Global`links, System`OptionValue[System`Method][Global`this, Global`childNode]], System`Null]], System`List[Global`links, Global`this, Global`counter, Global`symbolLabels]]]]]]], System`List[1]], System`Null]], System`Null]]
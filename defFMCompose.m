System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], Global`FMCompose[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], System`Pattern[Global`g, System`Blank[Global`FiniteMapping]], System`OptionsPattern[]], "f\[Degree]g\n\nOptions:\n* Method\n\tEvaluate - build composed function explicitly\n\tComposition - build implicitly composed functions", Global`FMCompose[Global`f, Global`g, System`OptionValue[System`Method]], System`Blank[], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[System`Rule[System`Options, System`List[System`Rule[System`Method, System`Composition]]]], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Blank[], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "f\[Degree]g\n\nOptions:\n* Method\n\tEvaluate - build composed function explicitly\n\tComposition - build implicitly composed functions", Global`body$, System`Blank[], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[Global`FMCompose[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], System`Pattern[Global`g, System`Blank[Global`FiniteMapping]], System`Composition], Global`FiniteMapping[System`Composition, Global`f, Global`g]], System`List[Global`FMCompose[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], System`Pattern[Global`g, System`Blank[Global`FiniteMapping]], System`Evaluate], System`With[System`List[System`Set[Global`a, Global`FMDomain[Global`g]], System`Set[Global`fga, System`Map[System`Function[Global`FMEvaluate[Global`f, Global`FMEvaluate[Global`g, System`Slot[1]]]], Global`FMDomain[Global`g]]]], Global`FiniteMappingMakeFromLists[Global`a, Global`fga]]]]], System`List[1]], System`Null]], System`Null]]
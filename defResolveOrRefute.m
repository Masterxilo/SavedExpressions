System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], Global`ResolveOrRefute[System`Pattern[Global`logicalExpression, System`Blank[]], System`Pattern[Global`domainOptionsForFindCounterexample, System`BlankNullSequence[]]], "applies Resolve and if that does not yield True, FindCounterexampleWithFunctionCalls@RemoveQuantifiers, giving {expression, replacement that makes expression True}\n\nOnly makes sense with universally quantified statements.", System`If[System`SameQ[System`Resolve[System`FullSimplify[Global`logicalExpression]], System`True], System`True, System`List[System`Not[Global`RemoveQuantifiers[Global`logicalExpression]], Global`FindCounterexampleWithFunctionCalls[Global`RemoveQuantifiers[Global`logicalExpression], Global`domainOptionsForFindCounterexample]]], System`Alternatives[System`True, System`List[System`Blank[], System`List[System`Repeated[System`List[System`BlankNullSequence[System`Rule]]]]]], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Alternatives[System`True, System`List[System`Blank[], System`List[System`Repeated[System`List[System`BlankNullSequence[System`Rule]]]]]], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "applies Resolve and if that does not yield True, FindCounterexampleWithFunctionCalls@RemoveQuantifiers, giving {expression, replacement that makes expression True}\n\nOnly makes sense with universally quantified statements.", Global`body$, System`Alternatives[System`True, System`List[System`Blank[], System`List[System`Repeated[System`List[System`BlankNullSequence[System`Rule]]]]]], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[]], System`List[1]], System`Null]], System`Null]]
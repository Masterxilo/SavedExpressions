System`HoldComplete[Global`RedefinePublicFunction[System`Condition[Global`Scene2DGridDataAsFM[System`Pattern[Global`s, System`Blank[Global`Scene2D]]], System`And[System`Not[Global`Scene2DSparseQ[Global`s]], System`LessEqual[Global`Scene2DEnergyColorDim[Global`s], 3]]], "Gives a FiniteMapping that maps sequences {x,y,part}, i.e. {Sequence@@p, part} to a real number for all valid positions {x,y} = p of the scene and part one of {1,2,3,3+c}, for c from 1 to Scene2DEnergyColorDim@s.\n\nPrepares the inverse function of the domain", Global`FiniteMappingMakeFromFunctions[System`With[System`List[System`Set[Global`gdf, Global`FMEvaluate[Global`GDAsFM[Global`s["GridData"]]]]], System`Function[System`List[Global`posData], System`Extract[Global`gdf[System`Most[Global`posData]], System`Part[System`List[System`List[1], System`List[2], System`List[3], System`List[4, 1], System`List[4, 2], System`List[4, 3]], System`Last[Global`posData]]]]], Global`FiniteMappingMakeCoordinateBoundsArray[System`Append[Global`Scene2DCoordinateBounds[Global`s], System`List[1, System`Plus[3, Global`Scene2DEnergyColorDim[Global`s]]]], System`Rule[System`Method, System`InverseFunction]]], System`Blank[Global`FiniteMapping], ""]]
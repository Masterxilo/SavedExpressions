System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], Global`InfiniTAMRenderScene[Global`InfiniTAMScene[System`Pattern[Global`id, System`Blank[System`Integer]]], System`Optional[Global`RGBDCameraPattern[], Global`CreateRGBDCamera[]], System`Optional[System`Pattern[Global`shader, System`Blank[System`String]], "renderColour"]], "renders from rgb camera, depth camera is ignored", System`Module[System`List[Global`rgb, Global`depth], System`CompoundExpression[System`Set[System`List[Global`rgb, Global`depth], InfiniTAM`Private`renderScene[Global`id, Global`shader, Global`poseWorldToView, Global`intrinsicsRgb]], Global`CreateRGBDView[System`Image[Global`rgb, "Byte", System`Rule[System`ColorSpace, "RGB"]], Global`DepthImage[Global`depth], Global`CreateRGBDCamera[Global`poseWorldToView, Global`intrinsicsRgb, Global`intrinsicsRgb, System`IdentityMatrix[4]]]]], System`Blank[], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Blank[], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "renders from rgb camera, depth camera is ignored", Global`body$, System`Blank[], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[Global`InfiniTAMRenderScene[System`Pattern[Global`s, Global`InfiniTAMScene[System`Blank[System`Integer]]], System`PatternTest[System`Pattern[Global`poseWorldToView, System`Blank[]], Global`PoseMatrixQ], System`Optional[System`Pattern[Global`shader, System`Blank[System`String]], "renderColour"]], Global`InfiniTAMRenderScene[Global`s, Global`CreateRGBDCamera[Global`poseWorldToView], Global`shader]]]], System`List[1]], System`Null]], System`Null]]
System`HoldComplete[Global`RedefinePublicFunction[Global`ReplaceFunctionCallsWithVariables[System`Pattern[Global`expr, System`Blank[]]], "replace each occurrence of f[x, ...] in expr with a new variable, always using the same variable for the same 'f' and 'x' expressions. \n\nThis assumes the involved functions are pure functions in the matimatical sense\nand that different arguments are actually different (or can be made different). Can be used as a preprocessing step to show the truth of some statement or find a counterexample. f must be a lowercase symbol in the Global` namespace.\n\nReturns {new expression, replacements used as a List of rules f[x, ...] -> var$}", System`Module[System`List[Global`r], System`CompoundExpression[System`Set[Global`r, System`DeleteDuplicates[System`Cases[Global`expr, System`Condition[System`Pattern[Global`f, System`Blank[]][System`Pattern[Global`x, System`BlankNullSequence[]]], Global`LowerCaseGlobalQ[Global`f]], System`Infinity]]], System`Set[Global`r, System`Thread[System`Rule[Global`r, System`Table[System`Unique[], System`Length[Global`r]]]]], System`List[System`ReplaceAll[Global`expr, Global`r], Global`r]]], System`List[System`Blank[], System`List[System`BlankNullSequence[System`Rule]]], ""]]
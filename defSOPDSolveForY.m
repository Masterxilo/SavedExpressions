System`HoldComplete[Global`RedefinePublicFunction[Global`SOPDSolveForY[System`Pattern[Global`p, Global`SparseOptimizationProblemDecomposed[System`Pattern[Global`a, System`Blank[System`Association]]]], System`Pattern[Global`options, System`OptionsPattern[]]], "", System`CompoundExpression[System`Assert[System`BooleanQ[System`OptionValue[System`Parallelize]]], System`If[System`OptionValue[System`Parallelize], System`CompoundExpression[System`Assert[System`SameQ[System`OptionValue[System`Method], "SOPCompiled"], "Parallelize only supported with SOPCompiled"], System`Module[System`List[Global`engine, Global`y1], System`CompoundExpression[System`Set[Global`engine, Global`SOPCompiledPrepare[System`First[Global`a["sop"]]["rif"]]], System`Assert[System`Equal[System`Head[Global`engine], Global`SOPCompiled]], Global`SOPCompiledOptimizePreprocessedMultiple[Global`engine, Global`SOPDGetX0[Global`p], System`Transpose[System`List[System`Map[System`Function[System`First[System`Slot[1]]["flattenedSparseDerivativeZtoYIndicesCIndex"]], Global`a["sops"]], System`Map[System`Function[System`First[System`Slot[1]]["xIndicesCIndex"]], Global`a["sops"]], System`Map[System`Function[System`First[System`Slot[1]]["yIndicesCIndex"]], Global`a["sops"]]]], System`Rule[System`Method, System`OptionValue["SOPCompiledMethod"]], System`Rule[System`MaxIterations, System`OptionValue[System`MaxIterations]]]]]], System`Map[System`Function[Global`SOPSolveForY[System`Slot[1], System`Rule[System`Method, System`OptionValue[System`Method]], System`Rule[System`MaxIterations, System`OptionValue[System`MaxIterations]]]], Global`a["sops"]]]], System`List[System`Repeated[System`PatternTest[System`List[System`BlankSequence[]], Global`NumericVectorQ]]], "", System`Rule[System`Options, System`List[System`Rule[System`Method, "GaussNewton"], System`Rule[System`MaxIterations, 1], System`Rule[System`Parallelize, System`False], System`Rule["SOPCompiledMethod", "CPU"]]]]]
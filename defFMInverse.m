System`HoldComplete[System`CompoundExpression[Global`RedefinePublicFunction[System`List[], Global`FMInverse[Global`FiniteMapping[Global`Concat, System`Pattern[Global`f, System`Blank[]], System`Pattern[Global`g, System`Blank[]]]], "f^-1 for injective f\n\nTODO maybe this can be sped up for associations with PositionIndex\nTODO allow disabling the check for injectivity, annotate/store result of this test (explicitly or implicitly)", Global`FMConcat[Global`FMInverse[Global`f], Global`FMInverse[Global`g]], System`Blank[], "", System`Rule[System`Options, System`OptionValue[Global`PRedefinePublicFunctionAlternatives, System`List[], System`Options]]], System`Module[System`List[Global`defineAlternative$], System`CompoundExpression[System`SetAttributes[Global`defineAlternative$, System`HoldAll], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`separateUsage$, System`Blank[System`String]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, Global`separateUsage$, Global`body$, System`Blank[], ""]], System`SetDelayed[Global`defineAlternative$[System`Pattern[Global`def$, System`Blank[]], System`Pattern[Global`body$, System`Blank[]]], Global`DefinePublicFunction[Global`def$, "f^-1 for injective f\n\nTODO maybe this can be sped up for associations with PositionIndex\nTODO allow disabling the check for injectivity, annotate/store result of this test (explicitly or implicitly)", Global`body$, System`Blank[], ""]], System`Apply[Global`defineAlternative$, System`Unevaluated[System`List[System`List[Global`FMInverse[Global`FiniteMapping[System`InverseFunction, System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], System`Pattern[Global`finv, System`Blank[Global`FiniteMapping]]]], Global`FiniteMapping[System`InverseFunction, Global`finv, Global`f]], System`List[Global`FMInverse[System`PatternTest[System`Pattern[Global`f, System`Blank[Global`FiniteMapping]], Global`FMInjectiveQ]], Global`FiniteMappingMakeFromRules[System`Thread[System`Rule[Global`FMEvaluateAll[Global`f], Global`FMDomain[Global`f]]]]]]], System`List[1]], System`Null]], System`Null]]
System`HoldComplete[Global`RedefinePublicFunction[Global`PreconditionedConjugateGradientMethod[System`Pattern[Global`A, System`Blank[]], System`Pattern[Global`b, System`Blank[]], System`Pattern[Global`Cm1, System`Blank[]], System`Optional[System`Pattern[Global`x0i, System`Blank[]], System`Null], System`Optional[System`Pattern[Global`rIsSufficientlySmall, System`Blank[]], System`Function[System`False]]], "Preconditioned conjugate gradient method, according to http://www.math-linux.com/mathematics/linear-systems/article/preconditioned-conjugate-gradient-method\n\nA symmetric and positive definite Cm1 should be invertible and of the same size as A\n\nfor educational purposes\n", System`CompoundExpression[System`Assert[System`SquareMatrixQ[Global`A]], System`Assert[System`SameQ[System`Length[Global`b], Global`MatrixHeight[Global`A]]], System`Assert[System`Equal[System`Dimensions[Global`A], System`Dimensions[Global`Cm1]]], System`Module[System`List[Global`x, Global`d, Global`rk, Global`z, Global`zk, Global`k, Global`alpha, Global`beta], System`CompoundExpression[System`Set[Global`x, System`If[System`SameQ[Global`x0i, System`Null], Global`Zeros[Global`MatrixWidth[Global`A]], Global`x0i]], System`Set[Global`r, System`Plus[Global`b, System`Times[-1, System`Dot[Global`A, Global`x]]]], System`Set[Global`z, System`Dot[Global`Cm1, Global`r]], System`Set[Global`d, Global`z], Global`Repeat[Global`MatrixHeight[Global`A], System`CompoundExpression[System`Set[Global`alpha, System`Times[System`Dot[Global`z, Global`r], System`Power[System`Dot[Global`d, System`Dot[Global`A, Global`d]], -1]]], System`Set[Global`x, System`Plus[Global`x, System`Times[Global`alpha, Global`d]]], System`Set[Global`zk, Global`z], System`Set[Global`rk, Global`r], System`Set[Global`r, System`Plus[Global`r, System`Times[-1, System`Times[Global`alpha, System`Dot[Global`A, Global`d]]]]], System`Set[Global`z, System`Dot[Global`Cm1, Global`r]], System`If[Global`rIsSufficientlySmall[Global`r], System`Break[]], System`Set[Global`beta, System`Times[System`Dot[Global`z, Global`r], System`Power[System`Dot[Global`zk, Global`rk], -1]]], System`Set[Global`d, System`Plus[Global`z, System`Times[Global`beta, Global`d]]], System`Null]], Global`x]]], System`Blank[], ""]]